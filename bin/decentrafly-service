#!/bin/bash
# Similar to decentrafly-env, but for services.txt

function print_enabled_services() {
    for service in $(cat /opt/decentrafly/services.txt | grep -v "^#"); do
        echo "[ info] $service is enabled ($(check_service $service))"
    done
}

# decentrafly-service enable <service>
function enable_service() {
    if [ $# -ne 2 ]; then
        echo "Usage: decentrafly-service enable <service>"
        exit 1
    fi
    if grep -q "^$2$" /opt/decentrafly/services.txt; then
        echo "[ info] $2 is already enabled"
    elif grep -q "^# *$2$" /opt/decentrafly/services.txt; then
        echo "[ info] $2 is currently disabled"
        sed -i "s/^# *$2$/$2/" /opt/decentrafly/services.txt
        echo "[ info] $2 has now been enabled"
    else
        echo "[ info] $2 is not in the list"
        echo "$2" >>/opt/decentrafly/services.txt
        echo "[ info] $2 has now been enabled"
    fi
}

function disable_service() {
    if [ $# -ne 2 ]; then
        echo "Usage: decentrafly-service disable <service>"
        exit 1
    fi
    if grep -q "^$2$" /opt/decentrafly/services.txt; then
        echo "[ info] $2 is currently enabled"
        sed -i "s/^$2$/# $2/" /opt/decentrafly/services.txt
        echo "[ info] $2 has now been disabled"
    elif grep -q "^# *$2$" /opt/decentrafly/services.txt; then
        echo "[ info] $2 is already disabled"
    else
        echo "[ info] $2 is not in the list"
        echo "# $2" >>/opt/decentrafly/services.txt
        echo "[ info] $2 has now been disabled"
    fi
}

# check if the container with name $service is running / stopped / missing and if it is healthy
function check_service() {
    # check if container named $1 does not exist
    if ! docker ps -a --format "{{.Names}}" | grep -q "^$1$"; then
        printf "missing"
        return
    fi
    # check if container named $1 is stopped
    if docker ps -a --format "{{.Names}}" | grep -q "^$1$" && ! docker ps --format "{{.Names}}" | grep -q "^$1$"; then
        printf "stopped"
        return
    fi
    # check if container named $1 is running
    if docker ps --format "{{.Names}}" | grep -q "^$1$"; then
        printf "running"
        # Check if there is a .State.Health field in the output of docker inspect
        if docker inspect $1 | grep -q '"Health":'; then
            # Check if the .State.Health.Status field is healthy
            if docker inspect $1 | grep -q '"Status": "healthy"'; then
                printf " (healthy)"
            else
                printf " (unhealthy)"
            fi
        fi
        return
    fi

}

# If argument = list,
if [ "$1" == "list" ]; then
    print_enabled_services
    exit 0
fi

# If argument = enable,
if [ "$1" == "enable" ]; then
    enable_service "$@"
    decentrafly-gen
    exit 0
fi

# If argument = disable,
if [ "$1" == "disable" ]; then
    disable_service "$@"
    decentrafly-gen
    exit 0
fi

function usage() {
    echo "[ info] Usage:"
    echo "[ info]   decentrafly-service list (list enabled services)"
    echo "[ info]   decentrafly-service enable <service> (enable a service)"
    echo "[ info]   decentrafly-service disable <service> (disable a service)"
}
usage
